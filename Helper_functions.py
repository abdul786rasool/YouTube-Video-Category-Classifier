# -*- coding: utf-8 -*-
"""helper_functions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g9l6WdY2Gz-X08ZFpk-7tkUkt7jSWAQi
"""

API_KEY ='AIzaSyCxc5CaS1h0qS7USYQrmlkpyr-zd7CA4uU'
import os
from googleapiclient.discovery import build



youtube = build('youtube', 'v3', developerKey=API_KEY)


def get_video_details(VIDEO_URL):
    video_id = VIDEO_URL.split('v=')[1]

    request = youtube.videos().list(
        part='snippet,contentDetails,statistics',
        id=video_id
    )
    response = request.execute()
    return response['items'][0] if response['items'] else None



def get_video_comments(VIDEO_URL, max_results=50):
    video_id = VIDEO_URL.split('v=')[1]
    try:
      request = youtube.commentThreads().list(
          part='snippet',
          videoId=video_id,
          order='relevance',
          textFormat='plainText',
          maxResults=max_results
      )
      response = request.execute()
      return [comment['snippet']['topLevelComment']['snippet']['textDisplay'] for comment in response['items']]
    except:
      return None

categories = ['music','sports','gaming','education','film/animation','entertainment','news and politics','comedy','other']
category_ids=[[10],[17],[20],[27],[1,18,30,31,41,44],[24,36,43],[25],[23,34],[-1]]
category_label = [i for i in range(len(categories))]
category_with_ids={}
for key,value in zip(categories,category_ids):
  category_with_ids[key]=value
category_to_label = {}
for value in category_label:
  category_to_label[categories[value]] = value


def get_video_data(VIDEO_URL,get_video_details=get_video_details,get_video_comments=get_video_comments,category_with_ids=category_with_ids,category_to_label=category_to_label):
  video_details = get_video_details(VIDEO_URL)
  if not video_details:
    return [None]*12
  video_comments = get_video_comments(VIDEO_URL)
  video_id = video_details.get('id',None)
  title = video_details['snippet'].get('title',None)
  description = video_details['snippet'].get('description',None)
  tags = video_details['snippet'].get('tags',None)
  #print(type(video_details['snippet']['categoryId']))
  category_Id =  video_details['snippet'].get('categoryId',-1)
  statistics = video_details['statistics']
  viewCount = statistics.get('viewCount',0)
  likeCount = statistics.get('likeCount',0)
  dislikeCount = statistics.get('dislikeCount',0)
  commentCount = statistics.get('commentCount',0)
  category = 'other'
  for cat,id in category_with_ids.items():
    if int(category_Id) in id:
      category = cat
      break
  category_label =  category_to_label[category]

  return [video_id,category_Id,category,category_label,title,description,tags,viewCount,likeCount,dislikeCount,commentCount,video_comments]

